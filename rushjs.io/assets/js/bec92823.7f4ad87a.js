"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[3886],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(6393);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(n),m=s,f=h["".concat(c,".").concat(m)]||h[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3251:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>l,toc:()=>p,default:()=>h});var r=n(1731),s=n(396),o=(n(6393),n(158)),a=["components"],i={title:"artifactory.json (experimental)"},c=void 0,l={unversionedId:"configs/artifactory_json",id:"configs/artifactory_json",title:"artifactory.json (experimental)",description:"This is the template that rush init",source:"@site/docs/configs/artifactory_json.md",sourceDirName:"configs",slug:"/configs/artifactory_json",permalink:"/rushstack-websites/rushjs.io/pages/configs/artifactory_json",editUrl:"https://github.com/microsoft/rushstack-websites/docs/configs/artifactory_json.md",tags:[],version:"current",frontMatter:{title:"artifactory.json (experimental)"},sidebar:"docsSidebar",previous:{title:".npmrc-publish",permalink:"/rushstack-websites/rushjs.io/pages/configs/npmrc-publish"},next:{title:"build-cache.json (experimental)",permalink:"/rushstack-websites/rushjs.io/pages/configs/build-cache_json"}},p=[{value:"See also",id:"see-also",children:[],level:2}],u={toc:p};function h(e){var t=e.components,n=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("head",null,(0,o.kt)("link",{rel:"canonical",href:"https://rushstack.io/pages/configs/artifactory_json/"})),(0,o.kt)("p",null,"This is the template that ",(0,o.kt)("a",{parentName:"p",href:"../../commands/rush_init"},"rush init"),"\ngenerates for ",(0,o.kt)("strong",{parentName:"p"},"artifactory.json"),":"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"common/config/rush/artifactory.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * This configuration file manages Rush integration with JFrog Artifactory services.\n * More documentation is available on the Rush website: https://rushjs.io\n */\n{\n  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/artifactory.schema.json",\n\n  "packageRegistry": {\n    /**\n     * (Required) Set this to "true" to enable Rush to manage tokens for an Artifactory NPM registry.\n     * When enabled, "rush install" will automatically detect when the user\'s ~/.npmrc\n     * authentication token is missing or expired.  And "rush setup" will prompt the user to\n     * renew their token.\n     *\n     * The default value is false.\n     */\n    "enabled": false,\n\n    /**\n     * (Required) Specify the URL of your NPM registry.  This is the same URL that appears in\n     * your .npmrc file.  It should look something like this example:\n     *\n     *   https://your-company.jfrog.io/your-project/api/npm/npm-private/\n     */\n    // "registryUrl": "",\n\n    /**\n     * A list of custom strings that "rush setup" should add to the user\'s ~/.npmrc file at the time\n     * when the token is updated.  This could be used for example to configure the company registry\n     * to be used whenever NPM is invoked as a standalone command (but it\'s not needed for Rush\n     * operations like "rush add" and "rush install", which get their mappings from the monorepo\'s\n     * common/config/rush/.npmrc file).\n     *\n     * NOTE: The ~/.npmrc settings are global for the user account on a given machine, so be careful\n     * about adding settings that may interfere with other work outside the monorepo.\n     */\n    "userNpmrcLinesToAdd": [\n      // "@example:registry=https://your-company.jfrog.io/your-project/api/npm/npm-private/"\n    ],\n\n    /**\n     * (Required) Specifies the URL of the Artifactory control panel where the user can generate\n     * an API key.  This URL is printed after the "visitWebsite" message.\n     * It should look something like this example:  https://your-company.jfrog.io/\n     * Specify an empty string to suppress this line entirely.\n     */\n    // "artifactoryWebsiteUrl": "",\n\n    /**\n     * These settings allow the "rush setup" interactive prompts to be customized, for\n     * example with messages specific to your team or configuration.  Specify an empty string\n     * to suppress that message entirely.\n     */\n    "messageOverrides": {\n      /**\n       * Overrides the message that normally says:\n       * "This monorepo consumes packages from an Artifactory private NPM registry."\n       */\n      // "introduction": "",\n\n      /**\n       * Overrides the message that normally says:\n       * "Please contact the repository maintainers for help with setting up an Artifactory user account."\n       */\n      // "obtainAnAccount": "",\n\n      /**\n       * Overrides the message that normally says:\n       * "Please open this URL in your web browser:"\n       *\n       * The "artifactoryWebsiteUrl" string is printed after this message.\n       */\n      // "visitWebsite": "",\n\n      /**\n       * Overrides the message that normally says:\n       * "Your user name appears in the upper-right corner of the JFrog website."\n       */\n      // "locateUserName": "",\n\n      /**\n       * Overrides the message that normally says:\n       * "Click \'Edit Profile\' on the JFrog website.  Click the \'Generate API Key\'\n       * button if you haven\'t already done so previously."\n       */\n      // "locateApiKey": ""\n    }\n  }\n}\n')),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../../maintainer/npm_registry_auth"},"NPM registry authentication"))))}h.isMDXComponent=!0}}]);