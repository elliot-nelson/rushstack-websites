"use strict";(self.webpackChunkrushstack_io=self.webpackChunkrushstack_io||[]).push([[67371],{50158:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var r=n(46393);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),c=a,k=d["".concat(o,".").concat(c)]||d[c]||m[c]||i;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},34061:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(74834),a=n(28265),i=(n(46393),n(50158)),l=["components"],s={hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},o=void 0,u={unversionedId:"api/terminal.stdiosummarizer",id:"api/terminal.stdiosummarizer",isDocsHomePage:!1,title:"terminal.stdiosummarizer",description:"Home &gt; @rushstack/terminal &gt; StdioSummarizer",source:"@site/docs/api/terminal.stdiosummarizer.md",sourceDirName:"api",slug:"/api/terminal.stdiosummarizer",permalink:"/rushstack-websites/undefined/pages/api/terminal.stdiosummarizer",editUrl:null,tags:[],version:"current",frontMatter:{hide_title:!0,custom_edit_url:null,pagination_prev:null,pagination_next:null},sidebar:"apiSidebar"},p=[{value:"StdioSummarizer class",id:"stdiosummarizer-class",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2},{value:"Constructors",id:"constructors",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2}],m={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/index"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal"},"@rushstack/terminal")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal.stdiosummarizer"},"StdioSummarizer")),(0,i.kt)("h2",{id:"stdiosummarizer-class"},"StdioSummarizer class"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"Summarizes the results of a failed build task by returning a subset of ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," output not to exceed a specified maximum number of lines."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare class StdioSummarizer extends TerminalWritable \n")),(0,i.kt)("b",null,"Extends:")," [TerminalWritable](/rushstack-websites/undefined/pages/api/terminal.terminalwritable)",(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("p",null,"IMPORTANT: This transform assumes that its input was prepared by ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal.stderrlinetransform"},"StderrLineTransform")," , so that each ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal.iterminalchunk.text"},"ITerminalChunk.text")," item is a single line terminated by a ",(0,i.kt)("inlineCode",{parentName:"p"},'"\\n"')," character."),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal.istdiosummarizeroptions.leadinglines"},"IStdioSummarizerOptions.leadingLines")," and ",(0,i.kt)("a",{parentName:"p",href:"/rushstack-websites/undefined/pages/api/terminal.istdiosummarizeroptions.trailinglines"},"IStdioSummarizerOptions.trailingLines")," counts specify the maximum number of lines to be returned. Any additional lines will be omitted. For example, if ",(0,i.kt)("inlineCode",{parentName:"p"},"leadingLines")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"trailingLines")," were set to ",(0,i.kt)("inlineCode",{parentName:"p"},"3")," , then the summary of 16 ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," lines might look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Line 1\nLine 2\nLine 3\n  ...10 lines omitted...\nLine 14\nLine 15\nLine 16\n")),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"stderr")," output is completely empty, then the ",(0,i.kt)("inlineCode",{parentName:"p"},"stdout")," output will be summarized instead."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Constructor"),(0,i.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/rushstack-websites/undefined/pages/api/terminal.stdiosummarizer._constructor_"},"(constructor)(options)")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Constructs a new instance of the ",(0,i.kt)("code",null,"StdioSummarizer")," class")))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/rushstack-websites/undefined/pages/api/terminal.stdiosummarizer.getreport"},"getReport()")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns the summary report.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/rushstack-websites/undefined/pages/api/terminal.stdiosummarizer.onwritechunk"},"onWriteChunk(chunk)")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)")))))))}d.isMDXComponent=!0}}]);